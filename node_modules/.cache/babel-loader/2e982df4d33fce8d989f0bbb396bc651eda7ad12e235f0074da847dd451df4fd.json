{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\home\\\\src\\\\s2-homeworks\\\\hw04\\\\common\\\\c2-SuperButton\\\\SuperButton.tsx\";\nimport React from 'react';\nimport s from './SuperButton.module.css';\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuperButton = _ref => {\n  let {\n    xType,\n    className,\n    disabled,\n    ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n  } = _ref;\n  const finalClassName = s.button + (disabled ? \"\" + s.disabled : xType === \"red\" ? \" \" + s.red : xType === \"secondary\" ? \" \" + s.secondary : \" \" + s.default) + (className ? ' ' + className : '');\n\n  //ИЛИ ЕСЛИ НЕ ПОНЯТНО С finalClassName  ТОЖЕ САМОЕ ПРИ ПОМОЩИ ШАБЛОННЫХ СТРОК:\n  // `${s.СТИЛЬ КНОПКИ}  ${xType==='КРАСНЫЙ' ? ДАВАЙ КРАСНЫЙ СТИЛЬ : xType === 'secondary' ? ДАВАЙ СЕКОНДАРИ СТИЛЬ: ДАВАЙ ПО ДЕФОЛТУ }\n  // ${disabled ? ДАВАЙ ДИЗАБЛЕТ СТИЛЬ :  ПУСТУЮ СТРОКУ} `\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    disabled: disabled,\n    className: finalClassName,\n    ...restProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c = SuperButton;\nexport default SuperButton;\nvar _c;\n$RefreshReg$(_c, \"SuperButton\");","map":{"version":3,"names":["React","s","SuperButton","xType","className","disabled","restProps","finalClassName","button","red","secondary","default"],"sources":["C:/Users/User/Documents/home/src/s2-homeworks/hw04/common/c2-SuperButton/SuperButton.tsx"],"sourcesContent":["import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    xType?: string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        xType,\n        className,\n        disabled,\n        ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName =\n      s.button +\n      (disabled\n        ? \"\" + s.disabled\n        : xType === \"red\"\n        ? \" \" + s.red\n        : xType === \"secondary\"\n        ? \" \" + s.secondary\n        : \" \" + s.default)\n        + (className ? ' ' + className : '') \n       \n        //ИЛИ ЕСЛИ НЕ ПОНЯТНО С finalClassName  ТОЖЕ САМОЕ ПРИ ПОМОЩИ ШАБЛОННЫХ СТРОК:\n    // `${s.СТИЛЬ КНОПКИ}  ${xType==='КРАСНЫЙ' ? ДАВАЙ КРАСНЫЙ СТИЛЬ : xType === 'secondary' ? ДАВАЙ СЕКОНДАРИ СТИЛЬ: ДАВАЙ ПО ДЕФОЛТУ }\n    // ${disabled ? ДАВАЙ ДИЗАБЛЕТ СТИЛЬ :  ПУСТУЮ СТРОКУ} `\n\n    return (\n        <button\n            disabled={disabled}\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n"],"mappings":";AAAA,OAAOA,KAAK,MAAiD,OAAO;AACpE,OAAOC,CAAC,MAAM,0BAA0B;;AAExC;AAAA;AAQA,MAAMC,WAA2C,GAAG,QAO/C;EAAA,IAND;IACIC,KAAK;IACLC,SAAS;IACTC,QAAQ;IACR,GAAGC,SAAS,CAAC;EACjB,CAAC;EAED,MAAMC,cAAc,GAClBN,CAAC,CAACO,MAAM,IACPH,QAAQ,GACL,EAAE,GAAGJ,CAAC,CAACI,QAAQ,GACfF,KAAK,KAAK,KAAK,GACf,GAAG,GAAGF,CAAC,CAACQ,GAAG,GACXN,KAAK,KAAK,WAAW,GACrB,GAAG,GAAGF,CAAC,CAACS,SAAS,GACjB,GAAG,GAAGT,CAAC,CAACU,OAAO,CAAC,IACfP,SAAS,GAAG,GAAG,GAAGA,SAAS,GAAG,EAAE,CAAC;;EAEpC;EACJ;EACA;;EAEA,oBACI;IACI,QAAQ,EAAEC,QAAS;IACnB,SAAS,EAAEE,cAAe;IAAA,GACtBD;EAAS;IAAA;IAAA;IAAA;EAAA,QACf;AAEV,CAAC;AAAA,KA9BKJ,WAA2C;AAgCjD,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}