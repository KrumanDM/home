{"ast":null,"code":"import _objectSpread from\"C:/Users/User/Documents/home/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"C:/Users/User/Documents/home/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"xType\",\"className\",\"disabled\"];import React from'react';import s from'./SuperButton.module.css';// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\nimport{jsx as _jsx}from\"react/jsx-runtime\";var SuperButton=function SuperButton(_ref){var xType=_ref.xType,className=_ref.className,disabled=_ref.disabled,restProps=_objectWithoutProperties(_ref,_excluded);var finalClassName=s.button+(disabled?\" \"+s.disabled:xType===\"red\"?\" \"+s.red:xType===\"secondary\"?\" \"+s.secondary:\" \"+s.default)+(className?' '+className:'');//ИЛИ ЕСЛИ НЕ ПОНЯТНО С finalClassName  ТОЖЕ САМОЕ ПРИ ПОМОЩИ ШАБЛОННЫХ СТРОК:\n// `${s.СТИЛЬ КНОПКИ}  ${xType==='КРАСНЫЙ' ? ДАВАЙ КРАСНЫЙ СТИЛЬ : xType === 'secondary' ? ДАВАЙ СЕКОНДАРИ СТИЛЬ: ДАВАЙ ПО ДЕФОЛТУ }\n// ${disabled ? ДАВАЙ ДИЗАБЛЕТ СТИЛЬ :  ПУСТУЮ СТРОКУ} `\nreturn/*#__PURE__*/_jsx(\"button\",_objectSpread({disabled:disabled,className:finalClassName},restProps));};export default SuperButton;","map":{"version":3,"names":["React","s","SuperButton","xType","className","disabled","restProps","finalClassName","button","red","secondary","default"],"sources":["C:/Users/User/Documents/home/src/s2-homeworks/hw04/common/c2-SuperButton/SuperButton.tsx"],"sourcesContent":["import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    xType?: string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        xType,\n        className,\n        disabled,\n        ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName =\n      s.button +\n      (disabled\n        ? \" \" + s.disabled\n        : xType === \"red\"\n        ? \" \" + s.red\n        : xType === \"secondary\"\n        ? \" \" + s.secondary\n        : \" \" + s.default)\n        + (className ? ' ' + className : '') \n       \n        //ИЛИ ЕСЛИ НЕ ПОНЯТНО С finalClassName  ТОЖЕ САМОЕ ПРИ ПОМОЩИ ШАБЛОННЫХ СТРОК:\n    // `${s.СТИЛЬ КНОПКИ}  ${xType==='КРАСНЫЙ' ? ДАВАЙ КРАСНЫЙ СТИЛЬ : xType === 'secondary' ? ДАВАЙ СЕКОНДАРИ СТИЛЬ: ДАВАЙ ПО ДЕФОЛТУ }\n    // ${disabled ? ДАВАЙ ДИЗАБЛЕТ СТИЛЬ :  ПУСТУЮ СТРОКУ} `\n\n    return (\n        <button\n            disabled={disabled}\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n"],"mappings":"sSAAA,MAAOA,MAAK,KAAiD,OAAO,CACpE,MAAOC,EAAC,KAAM,0BAA0B,CAExC;AAAA,2CAQA,GAAMC,YAA2C,CAAG,QAA9CA,YAA2C,MAO5C,IALGC,MAAK,MAALA,KAAK,CACLC,SAAS,MAATA,SAAS,CACTC,QAAQ,MAARA,QAAQ,CACLC,SAAS,0CAGhB,GAAMC,eAAc,CAClBN,CAAC,CAACO,MAAM,EACPH,QAAQ,CACL,GAAG,CAAGJ,CAAC,CAACI,QAAQ,CAChBF,KAAK,GAAK,KAAK,CACf,GAAG,CAAGF,CAAC,CAACQ,GAAG,CACXN,KAAK,GAAK,WAAW,CACrB,GAAG,CAAGF,CAAC,CAACS,SAAS,CACjB,GAAG,CAAGT,CAAC,CAACU,OAAO,CAAC,EACfP,SAAS,CAAG,GAAG,CAAGA,SAAS,CAAG,EAAE,CAAC,CAEpC;AACJ;AACA;AAEA,mBACI,6BACI,QAAQ,CAAEC,QAAS,CACnB,SAAS,CAAEE,cAAe,EACtBD,SAAS,EACf,CAEV,CAAC,CAED,cAAeJ,YAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}