{"ast":null,"code":"export const homeWorkReducer = (state, action) => {\n  // need to fix any\n  switch (action.type) {\n    case 'sort':\n      {\n        // by name\n        const todoSort = state => {\n          return state.sort((a, b) => {\n            if (a.value > b.value) {}\n          });\n        };\n        return state; // need to fix\n      }\n\n    case 'check':\n      {\n        return [...state]; // need to fix\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["homeWorkReducer","state","action","type","todoSort","sort","a","b","value"],"sources":["C:/Users/User/Documents/home/src/s2-homeworks/hw08/bll/homeWorkReducer.ts"],"sourcesContent":["import {UserType} from '../HW8'\n\ntype ActionType =\n    | { type: 'sort'; payload: 'up' | 'down' }\n    | { type: 'check'; payload: number }\n\nexport const homeWorkReducer = (state: UserType[], action: ActionType): UserType[] => { // need to fix any\n    switch (action.type) {\n        case 'sort': { // by name\n            const todoSort = (state:UserType[]) => {\n               return state\n               .sort((a,b) => {\n                  if (a.value > b.value) {}\n               })\n            } \n            return state // need to fix\n        }\n        case 'check': {\n            \n            return [...state] // need to fix\n        }\n        default:\n            return state\n    }\n}\n"],"mappings":"AAMA,OAAO,MAAMA,eAAe,GAAG,CAACC,KAAiB,EAAEC,MAAkB,KAAiB;EAAE;EACpF,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,MAAM;MAAE;QAAE;QACX,MAAMC,QAAQ,GAAIH,KAAgB,IAAK;UACpC,OAAOA,KAAK,CACXI,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAK;YACZ,IAAID,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK,EAAE,CAAC;UAC3B,CAAC,CAAC;QACL,CAAC;QACD,OAAOP,KAAK,EAAC;MACjB;;IACA,KAAK,OAAO;MAAE;QAEV,OAAO,CAAC,GAAGA,KAAK,CAAC,EAAC;MACtB;;IACA;MACI,OAAOA,KAAK;EAAA;AAExB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}