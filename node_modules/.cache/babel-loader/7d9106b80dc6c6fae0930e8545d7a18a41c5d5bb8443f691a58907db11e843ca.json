{"ast":null,"code":"import _slicedToArray from\"C:/Users/User/Documents/home/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import s from'./HW11.module.css';import s2 from'../../s1-main/App.module.css';import{restoreState}from'../hw06/localStorage/localStorage';import SuperRange from'./common/c7-SuperRange/SuperRange';/*\n* 1 - передать значения в оба слайдера\n* 2 - дописать типы и логику функции change\n* 3 - сделать стили в соответствии с дизайном\n* */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function HW11(){// for autotests // не менять // можно подсунуть в локалСторэдж нужные числа, чтоб увидеть как они отображаются\nvar _useState=useState(restoreState('hw11-value1',0)),_useState2=_slicedToArray(_useState,2),value1=_useState2[0],setValue1=_useState2[1];var _useState3=useState(restoreState('hw11-value2',100)),_useState4=_slicedToArray(_useState3,2),value2=_useState4[0],setValue2=_useState4[1];var change=function change(event,value){// пишет студент // если пришёл массив - сохранить значения в оба useState, иначе в первый\nif(Array.isArray(value)){setValue1(value[0]);setValue2(value[1]);}else{setValue1(value);}};return/*#__PURE__*/_jsxs(\"div\",{id:'hw11',children:[/*#__PURE__*/_jsx(\"div\",{className:s2.hwTitle,children:\"Homework #11\"}),/*#__PURE__*/_jsx(\"div\",{className:s2.hw,children:/*#__PURE__*/_jsxs(\"div\",{className:s.container,children:[/*#__PURE__*/_jsxs(\"div\",{className:s.wrapper,children:[/*#__PURE__*/_jsx(\"span\",{id:'hw11-value',className:s.number,children:value1}),/*#__PURE__*/_jsx(SuperRange,{id:'hw11-single-slider'// сделать так чтоб value1 изменялось // пишет студент\n,onChange:change,value:value1})]}),/*#__PURE__*/_jsxs(\"div\",{className:s.wrapper,children:[/*#__PURE__*/_jsx(\"span\",{id:'hw11-value-1',className:s.number,children:value1}),/*#__PURE__*/_jsx(SuperRange,{id:'hw11-double-slider'// сделать так чтоб value1/2 изменялось // пишет студент\n,onChange:change,value:[value1,value2]}),/*#__PURE__*/_jsx(\"span\",{id:'hw11-value-2',className:s.number,children:value2})]})]})})]});}export default HW11;","map":{"version":3,"names":["React","useState","s","s2","restoreState","SuperRange","HW11","value1","setValue1","value2","setValue2","change","event","value","Array","isArray","hwTitle","hw","container","wrapper","number"],"sources":["C:/Users/User/Documents/home/src/s2-homeworks/hw11/HW11.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport s from './HW11.module.css'\nimport s2 from '../../s1-main/App.module.css'\nimport { restoreState } from '../hw06/localStorage/localStorage'\nimport SuperRange from './common/c7-SuperRange/SuperRange'\n\n/*\n* 1 - передать значения в оба слайдера\n* 2 - дописать типы и логику функции change\n* 3 - сделать стили в соответствии с дизайном\n* */\n\nfunction HW11() {\n    // for autotests // не менять // можно подсунуть в локалСторэдж нужные числа, чтоб увидеть как они отображаются\n    const [value1, setValue1] = useState(restoreState<number>('hw11-value1', 0))\n    const [value2, setValue2] = useState(restoreState<number>('hw11-value2', 100))\n\n    const change = (event: any, value: any) => {\n        // пишет студент // если пришёл массив - сохранить значения в оба useState, иначе в первый\n        if (Array.isArray(value)) {\n            \n            setValue1(value[0])\n            setValue2(value[1])\n        } else {\n            \n            setValue1(value)\n        }\n\n    }\n\n    return (\n        <div id={'hw11'}>\n            <div className={s2.hwTitle}>Homework #11</div>\n\n            <div className={s2.hw}>\n                <div className={s.container}>\n                    <div className={s.wrapper}>\n                        <span id={'hw11-value'} className={s.number}>{value1}</span>\n                        <SuperRange\n                            id={'hw11-single-slider'}\n                            // сделать так чтоб value1 изменялось // пишет студент\n                            onChange={change}\n                            value={value1}\n                        />\n                    </div>\n                    <div className={s.wrapper}>\n                        <span id={'hw11-value-1'} className={s.number}>{value1}</span>\n                        <SuperRange\n                            id={'hw11-double-slider'}\n                            // сделать так чтоб value1/2 изменялось // пишет студент\n                            onChange={change}\n                            value={[value1,value2]}\n                        />\n                        <span id={'hw11-value-2'} className={s.number}>{value2}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HW11\n"],"mappings":"kHAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAOC,EAAC,KAAM,mBAAmB,CACjC,MAAOC,GAAE,KAAM,8BAA8B,CAC7C,OAASC,YAAY,KAAQ,mCAAmC,CAChE,MAAOC,WAAU,KAAM,mCAAmC,CAE1D;AACA;AACA;AACA;AACA,IAJA,wFAMA,QAASC,KAAI,EAAG,CACZ;AACA,cAA4BL,QAAQ,CAACG,YAAY,CAAS,aAAa,CAAE,CAAC,CAAC,CAAC,wCAArEG,MAAM,eAAEC,SAAS,eACxB,eAA4BP,QAAQ,CAACG,YAAY,CAAS,aAAa,CAAE,GAAG,CAAC,CAAC,yCAAvEK,MAAM,eAAEC,SAAS,eAExB,GAAMC,OAAM,CAAG,QAATA,OAAM,CAAIC,KAAU,CAAEC,KAAU,CAAK,CACvC;AACA,GAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,CAAE,CAEtBL,SAAS,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,CACnBH,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CACvB,CAAC,IAAM,CAEHL,SAAS,CAACK,KAAK,CAAC,CACpB,CAEJ,CAAC,CAED,mBACI,aAAK,EAAE,CAAE,MAAO,wBACZ,YAAK,SAAS,CAAEV,EAAE,CAACa,OAAQ,0BAAmB,cAE9C,YAAK,SAAS,CAAEb,EAAE,CAACc,EAAG,uBAClB,aAAK,SAAS,CAAEf,CAAC,CAACgB,SAAU,wBACxB,aAAK,SAAS,CAAEhB,CAAC,CAACiB,OAAQ,wBACtB,aAAM,EAAE,CAAE,YAAa,CAAC,SAAS,CAAEjB,CAAC,CAACkB,MAAO,UAAEb,MAAM,EAAQ,cAC5D,KAAC,UAAU,EACP,EAAE,CAAE,oBACJ;AAAA,CACA,QAAQ,CAAEI,MAAO,CACjB,KAAK,CAAEJ,MAAO,EAChB,GACA,cACN,aAAK,SAAS,CAAEL,CAAC,CAACiB,OAAQ,wBACtB,aAAM,EAAE,CAAE,cAAe,CAAC,SAAS,CAAEjB,CAAC,CAACkB,MAAO,UAAEb,MAAM,EAAQ,cAC9D,KAAC,UAAU,EACP,EAAE,CAAE,oBACJ;AAAA,CACA,QAAQ,CAAEI,MAAO,CACjB,KAAK,CAAE,CAACJ,MAAM,CAACE,MAAM,CAAE,EACzB,cACF,aAAM,EAAE,CAAE,cAAe,CAAC,SAAS,CAAEP,CAAC,CAACkB,MAAO,UAAEX,MAAM,EAAQ,GAC5D,GACJ,EACJ,GACJ,CAEd,CAEA,cAAeH,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}